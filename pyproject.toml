[tool.poetry]
name = "canvas-packages"
version = "0.1.0"
description = ""
authors = ["Will Beebe"]
readme = "README.md"
# packages = [{ include = "*", from = "app" }]
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.32.3"
pyyaml = "^6.0.2"
google = "^3.0.0"
google-cloud-storage = "^2.18.2"

[tool.poetry.dev-dependencies]
pytest = "^8.1.1"
pytest-asyncio = "^0.23.7"
ruff = "^0.3.0"

# [tool.poetry.scripts]
# lint = "app.scripts.lint:main"

[tool.poetry.group.dev.dependencies]
pytest-dotenv = "^0.5.2"
pytest = "^8.2.2"
httpx = "^0.27.0"


[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.pytest]
env_files = [".env"]
asyncio_mode = "auto"

[tool.ruff]
select = [
    "E", # pycodestyle errors
    "F", # pyflakes
    "W", # pycodestyle warnings
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]
ignore = ["E501", "B008"] # line length violations

# Enable Pyflakes `F401` rule to detect unused imports
extend-select = ["F401"]

# Same as Black.
line-length = 88

# Assume Python 3.11
target-version = "py311"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-first-party = ["app"]

[tool.ruff.flake8-bugbear]
extend-immutable-calls = [
    "fastapi.Depends",
    "fastapi.params.Depends",
    "fastapi.Query",
    "fastapi.params.Query",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
